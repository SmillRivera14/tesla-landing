---
import Logo from "./Logo.astro";
---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40"
>
  <!-- Logo (izquierda) -->
  <div class="flex flex-grow basis-0 text-current">
    <a href="#home">
      <Logo />
    </a>
  </div>

  <!-- Menú Principal (centro) - Productos Tesla -->
  <nav class="mx-4">
    <ul
      class="flex text-sm [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:transition-color [&>li>a]:duration-500"
    >
      <li><a href="#cybertruck">Cybertruck</a></li>
      <li><a href="#model_3">Model 3</a></li>
      <li><a href="#model_s">Model S</a></li>
      <li><a href="#model_x">Model X</a></li>
      <li><a href="#model_y">Model Y</a></li>
      <li><a href="#accessories">Accessories</a></li>
      <li class="border-l border-current/20 ml-2 pl-2">
        <a href="#powerwall">Energy</a>
      </li>
    </ul>
  </nav>

  <!-- Menú Secundario (derecha) - Soporte y Cuenta -->
  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2 [&>li>a]:transition-color [&>li>a]:duration-500"
    >
      <li><a href="https://www.tesla.com/" target="_blank">Shop</a></li>
      <li>
        <a
          href="https://auth.tesla.com/en_us/oauth2/v1/authorize?redirect_uri=https%3A%2F%2Fwww.tesla.com%2Fteslaaccount%2Fowner-xp%2Fauth%2Fcallback&response_type=code&client_id=ownership&scope=offline_access%20openid%20ou_code%20email%20phone&audience=https%3A%2F%2Fownership.tesla.com%2F&locale=en-US"
          target="_blank">Account</a>
      </li>
      <!-- <li class="ml-2 pl-2 border-l border-current/20">
        <a href="#">Menu</a>
      </li> -->
    </ul>
  </nav>

  <!-- Efecto hover -->
  <div
    id="menu-backdrop"
    class="absolute bg-black/5 backdrop-blur-lg rounded translate-x-[var(--left)] translate-y-[var(--top)] left-0 top-0 w-[var(--width)] h-[var(--height)] transition-all duration-300 ease-in-out opacity-0 -z-10"
  >
  </div>
</header>

<script>
  // cuadro de fondo del menú
  const listItem = document.querySelectorAll("#landing-header li");
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();
      const { clientHeight, clientWidth } = item;

      console.log({ left, top, width, height });
      console.log({ clientHeight, clientWidth });

      menuBackDrop.style.setProperty("--left", `${left}px`);
      menuBackDrop.style.setProperty("--top", `${top}px`);
      menuBackDrop.style.setProperty("--width", `${width}px`);
      menuBackDrop.style.setProperty("--height", `${height}px`);

      menuBackDrop.style.opacity = "1";
      menuBackDrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0";
      menuBackDrop.style.visibility = "hidden";
    });
  });
</script>

<script>
  // cambiar el color de las letras según la carta presentada
  // IntersectionObserver
  const header = document.querySelector("#landing-header");
  const observerOptions = {
    root: null, // default to the viewport (cuando entre al viewport)
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        if (header) {
          (header as HTMLElement).style.color = color;

          // Actualizar todos los elementos que usan text-current
          document.querySelectorAll(".text-current").forEach((el) => {
            (el as HTMLElement).style.color = color;
          });
        }
      }
    });
  }, observerOptions);

  const sections = document.querySelectorAll(".landing-section");
  sections.forEach((section) => observer.observe(section));
</script>

<script>
  document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
    anchor.addEventListener("click", function (e) {
      e.preventDefault();
      const targetId = this.getAttribute("href");
      const targetElement = document.querySelector(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({ behavior: "smooth", block: "start" });
      }
    });
  });
</script>
